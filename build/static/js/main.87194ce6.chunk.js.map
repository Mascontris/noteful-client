{"version":3,"sources":["CircleButton/CircleButton.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/AddFolder.js","Dropdown.js","AddNote/AddNote.js","Error.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","React","createElement","join","children","defaultProps","findNote","notes","noteId","find","note","id","countNotesForFolder","folderId","filter","length","NoteListNav","folders","map","folder","key","NavLink","to","name","Link","type","icon","NotePageNav","role","onClick","history","goBack","Note","format","modified","NoteListMain","NotePageMain","content","split","para","i","AddFolder","state","errors","value","handleChange","bind","handleSubmit","event","this","setState","target","preventDefault","data","fetch","method","body","JSON","stringify","headers","then","res","json","response","addFolder","push","catch","error","console","onSubmit","onChange","Component","Dropdown","showMenu","closeMenu","document","addEventListener","dropdownMenu","contains","removeEventListener","log","ref","element","AddNote","ipsum","require","Date","generate","words","addNote","ErrorBoundary","hasError","App","path","Route","exact","render","routeProps","match","params","findFolder","notesForFolder","getNotesForFolder","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","BrowserRouter","getElementById"],"mappings":"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","file":"static/js/main.87194ce6.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default function NoteListNav(props) {\n  return (\n    <div className='NoteListNav'>\n      <ul className='NoteListNav__list'>\n        {props.folders.map(folder =>\n          <li key={folder.id}>\n            <NavLink\n              className='NoteListNav__folder-link'\n              to={`/folder/${folder.id}`}\n            >\n              <span className='NoteListNav__num-notes'>\n                {countNotesForFolder(props.notes, folder.id)}\n              </span>\n              {folder.name}\n            </NavLink>\n          </li>\n        )}\n      </ul>\n      <div className='NoteListNav__button-wrapper'>\n        <CircleButton\n          tag={Link}\n          to='/add-folder'\n          type='button'\n          className='NoteListNav__add-folder-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Folder\n        </CircleButton>\n      </div>\n    </div>\n  )\n}\n\nNoteListNav.defaultProps = {\n  folders: []\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NotePageNav.css'\n\nexport default function NotePageNav(props) {\n  return (\n    <div className='NotePageNav'>\n      <CircleButton\n        tag='button'\n        role='link'\n        onClick={() => props.history.goBack()}\n        className='NotePageNav__back-button'\n      >\n        <FontAwesomeIcon icon='chevron-left' />\n        <br />\n        Back\n      </CircleButton>\n      {props.folder && (\n        <h3 className='NotePageNav__folder-name'>\n          {props.folder.name}\n        </h3>\n      )}\n    </div>\n  )\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Note.css'\n\nexport default function Note(props) {\n  return (\n    <div className='Note'>\n      <h2 className='Note__title'>\n        <Link to={`/note/${props.id}`}>\n          {props.name}\n        </Link>\n      </h2>\n      <button className='Note__delete' type='button'>\n        <FontAwesomeIcon icon='trash-alt' />\n        {' '}\n        remove\n      </button>\n      <div className='Note__dates'>\n        <div className='Note__dates-modified'>\n          Modified\n          {' '}\n          <span className='Date'>\n            {format(props.modified, 'Do MMM YYYY')}\n          </span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NoteListMain.css'\n\nexport default function NoteListMain(props) {\n  return (\n    <section className='NoteListMain'>\n      <ul>\n        {props.notes.map(note =>\n          <li key={note.id}>\n            <Note\n              id={note.id}\n              name={note.name}\n              modified={note.modified}\n            />\n          </li>\n        )}\n      </ul>\n      <div className='NoteListMain__button-container'>\n        <CircleButton\n          tag={Link}\n          to='/add-note'\n          type='button'\n          className='NoteListMain__add-note-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Note\n        </CircleButton>\n      </div>\n    </section>\n  )\n}\n\nNoteListMain.defaultProps = {\n  notes: [],\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport './NotePageMain.css'\n\nexport default function NotePageMain(props) {\n  return (\n    <section className='NotePageMain'>\n      <Note\n        id={props.note.id}\n        name={props.note.name}\n        modified={props.note.modified}\n      />\n      <div className='NotePageMain__content'>\n        {props.note.content.split(/\\n \\r|\\n/).map((para, i) =>\n          <p key={i}>{para}</p>\n        )}\n      </div>\n    </section>\n  )\n}\n\nNotePageMain.defaultProps = {\n  note: {\n    content: '',\n  }\n}\n","import React, { Component } from 'react'\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport PropTypes from 'prop-types';\n\nexport default class AddFolder extends Component {\n\n    static propTypes = {\n        addFolder: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: \"\",\n            value: ``\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var url = 'http://localhost:9090/folders';\n        var data = { name: this.state.value }\n\n        if(this.props.folderId ){\n            data.folderId = this.props.folderId\n        }\n        if (!data.name){\n            this.setState({ errors: \"field cannot be blank\" })\n        }\n        else {\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                this.props.addFolder(response)\n                this.props.history.push('/')\n            })\n            .catch(error => console.error('Error:', error));\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <NotePageNav {...this.props} />\n                <form onSubmit={this.handleSubmit}>\n                    <label>Folder Name:\n                    <input type=\"text\" name=\"newFolder\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n\n                    <input type=\"submit\" value=\"Submit\" />\n                    {this.state.errors && <span className=\"Error__text\">{this.state.errors}</span>}\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Dropdown extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            showMenu: false,\n        }\n\n        this.showMenu = this.showMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n    }\n    \n    showMenu(event) {\n        event.preventDefault();\n\n        this.setState({ showMenu: true }, () => {\n            document.addEventListener('click', this.closeMenu);\n        });\n    }\n\n    closeMenu(event) {\n        if (!this.dropdownMenu.contains(event.target)) {\n\n        this.setState({ showMenu: false }, () => {\n            document.removeEventListener('click', this.closeMenu);\n        });\n      }\n    }\n\n\n    render () {\n        console.log(this.props.folders.folders)\n        return (\n            <div>\n              <button onClick={this.showMenu}>\n                Select Folder\n              </button>\n              \n              {\n                this.state.showMenu ? (\n                    <div className=\"Dropdown__menu\" ref={(element) => {\n                        this.dropdownMenu = element;\n                    }}>\n            </div>\n                  ) : (null)\n              }\n            </div>\n          );\n        }\n      }","import React, { Component } from 'react'\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../Dropdown';\n\nexport default class AddNote extends Component {\n    \n    static propTypes = {\n        addNote: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: \"\",\n            value: ``\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault();\n\n        const ipsum = require('gen-ipsum'); // run \"npm install gen-ipsum\" to install React component\n        const url = 'http://localhost:9090/notes';\n        const data = { name: this.state.value, modified: new Date(), content: ipsum.generate({words: 30}), }\n        if(this.props.folderId ){\n            data.folderId = this.props.folderId\n        }\n        if (!data.name){\n            this.setState({ errors: \"field cannot be blank\" })\n        }\n        else {\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                this.props.addNote(response)\n                this.props.history.push('/')\n            })\n            .catch(error => console.error('Error:', error));\n\n        \n        }\n    }\n    render() {\n        return (\n            <div>\n                <NotePageNav {...this.props} />\n                <form onSubmit = {this.handleSubmit}>\n                    <label>Enter Note Name:\n                    <input type=\"text\" name=\"newNote\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                    {this.state.errors && <span className=\"Error__text\">{this.state.errors}</span>}\n                </form>\n                <Dropdown folders={this.props}></Dropdown>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong. Try again.</h1>;\n    }\n\n    return this.props.children; \n  }\n}","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote'\nimport {getNotesForFolder, findNote, findFolder} from '../notes-helpers';\nimport './App.css';\nimport ErrorBoundary from '../Error'\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        // fake date loading from API call\n        //setTimeout(() => this.setState(dummyStore), 600);\n        fetch('http://localhost:9090/folders').then(res => res.json())\n        .then(response => this.setState({folders: response}))\n        .catch(error => console.error('Error:', error))\n        fetch('http://localhost:9090/notes').then(res => res.json())\n        .then(response => this.setState({notes: response}))\n        .catch(error => console.error('Error:', error))\n    }\n\n    addFolder = (folder) => {this.setState({folders: [...this.state.folders, folder]})}\n    addNote = (note) => {this.setState({notes: [...this.state.notes, note]})}\n\n    renderNavRoutes() {\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        render={routeProps => (\n                            <NoteListNav\n                                folders={folders}\n                                notes={notes}\n                                {...routeProps}\n                            />\n                        )}\n                    />\n                ))}\n                <Route\n                    path=\"/note/:noteId\"\n                    render={routeProps => {\n                        const {noteId} = routeProps.match.params;\n                        const note = findNote(notes, noteId) || {};\n                        const folder = findFolder(folders, note.folderId);\n                        return <NotePageNav {...routeProps} folder={folder} />;\n                    }}\n                />\n                <Route path=\"/add-folder\" \n                    render={routeProps => {\n                    return <AddFolder {...routeProps} addFolder={this.addFolder} />}} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        // eslint-disable-next-line\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        render={routeProps => {\n                            const {folderId} = routeProps.match.params;\n                            const notesForFolder = getNotesForFolder(\n                                notes,\n                                folderId\n                            );\n                            return (\n                                <NoteListMain\n                                    {...routeProps}\n                                    notes={notesForFolder}\n                                />\n                            );\n                        }}\n                    />\n                ))}\n                <Route\n                    path=\"/note/:noteId\"\n                    render={routeProps => {\n                        const {noteId} = routeProps.match.params;\n                        const note = findNote(notes, noteId);\n                        return <NotePageMain {...routeProps} note={note} />;\n                    }}\n                />\n                <Route path=\"/add-note\" \n                    render={routeProps => {\n                    return <AddNote {...routeProps} addNote={this.addNote} folderId={routeProps.match.params.folderId} folders={this.state.folders}/>}} />\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <ErrorBoundary>\n            <div className=\"App\">\n                <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                <header className=\"App__header\">\n                    <h1>\n                        <Link to=\"/\">Noteful</Link>{' '}\n                        <FontAwesomeIcon icon=\"check-double\" />\n                    </h1>\n                </header>\n                <main className=\"App__main\">{this.renderMainRoutes()}</main>\n            </div>\n            </ErrorBoundary>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}