{"ast":null,"code":"import _classCallCheck from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gnmr/projects/noteful-client/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotePageNav from '../NotePageNav/NotePageNav';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNote, _Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n    _this.state = {\n      value: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n\n      var ipsum = require('gen-ipsum'); // run \"npm install gen-ipsum\" to install React component\n\n\n      var url = 'http://localhost:9090/notes';\n      var data = {\n        name: this.state.value,\n        modified: new Date(),\n        content: ipsum.generate({\n          words: 30\n        })\n      };\n\n      if (this.props.folderId) {\n        data.folderId = this.props.folderId;\n      }\n\n      fetch(url, {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        _this2.props.addNote(response);\n\n        _this2.props.history.push('/');\n      }).catch(function (error) {\n        return console.error('Error:', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(NotePageNav, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Enter Note Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"newNote\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddNote;\n}(Component);\n\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/gnmr/projects/noteful-client/src/AddNote/AddNote.js"],"names":["React","Component","NotePageNav","AddNote","props","state","value","handleChange","bind","handleSubmit","event","setState","target","preventDefault","ipsum","require","url","data","name","modified","Date","content","generate","words","folderId","fetch","method","body","JSON","stringify","headers","then","res","json","response","addNote","history","push","catch","error","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;IAEqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK;AADI,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AAPe;AAQlB;;;;iCAEYE,K,EAAO;AAChB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAAtB,OAAd;AACH;;;iCAEYI,K,EAAO;AAAA;;AAChBA,MAAAA,KAAK,CAACG,cAAN;;AACA,UAAMC,KAAK,GAAGC,OAAO,CAAC,WAAD,CAArB,CAFgB,CAEoB;;;AACpC,UAAMC,GAAG,GAAG,6BAAZ;AACA,UAAMC,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,KAAnB;AAA0Ba,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,EAApC;AAAgDC,QAAAA,OAAO,EAAEP,KAAK,CAACQ,QAAN,CAAe;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAf;AAAzD,OAAb;;AACA,UAAG,KAAKnB,KAAL,CAAWoB,QAAd,EAAwB;AACpBP,QAAAA,IAAI,CAACO,QAAL,GAAgB,KAAKpB,KAAL,CAAWoB,QAA3B;AACH;;AAEDC,MAAAA,KAAK,CAACT,GAAD,EAAM;AACPU,QAAAA,MAAM,EAAE,MADD;AACS;AAChBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAFC;AAEqB;AAC5Ba,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAHF,OAAN,CAAL,CAMGC,IANH,CAMQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OANX,EAOKF,IAPL,CAOU,UAAAG,QAAQ,EAAI;AACd,QAAA,MAAI,CAAC9B,KAAL,CAAW+B,OAAX,CAAmBD,QAAnB;;AACA,QAAA,MAAI,CAAC9B,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,OAVL,EAWKC,KAXL,CAWW,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAAJ;AAAA,OAXhB;AAeH;;;6BACQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrC,KAAjB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD,oBAAiB,KAAKA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI;AAAM,QAAA,QAAQ,EAAE,KAAKK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAApD;AAA2D,QAAA,QAAQ,EAAE,KAAKC,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,EAII;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAFJ,CADJ;AAWH;;;;EArDgCN,S;;SAAhBE,O","sourcesContent":["import React, { Component } from 'react'\nimport NotePageNav from '../NotePageNav/NotePageNav';\n\nexport default class AddNote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ``\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const ipsum = require('gen-ipsum'); // run \"npm install gen-ipsum\" to install React component\n        const url = 'http://localhost:9090/notes';\n        const data = { name: this.state.value, modified: new Date(), content: ipsum.generate({words: 30}),  }\n        if(this.props.folderId ){\n            data.folderId = this.props.folderId\n        }\n\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                this.props.addNote(response)\n                this.props.history.push('/')\n            })\n            .catch(error => console.error('Error:', error));\n\n        \n\n    }\n    render() {\n        console.log(this.props)\n        return (\n            <div>\n                <NotePageNav {...this.props} />\n                <form onSubmit={this.handleSubmit}>\n                    <label>Enter Note Name:\n                    <input type=\"text\" name=\"newNote\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}