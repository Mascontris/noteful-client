{"ast":null,"code":"import _classCallCheck from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gnmr/projects/noteful-client/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../Dropdown';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNote, _Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var url = 'http://localhost:9090/notes';\n      var data = {\n        name: _this.state.noteName,\n        modified: new Date(),\n        content: _this.state.noteContent\n      };\n\n      if (_this.props.folderId) {\n        data.folderId = _this.props.folderId;\n      }\n\n      if (!data.name) {\n        _this.setState({\n          errors: \"Note name field cannot be blank\"\n        });\n      } else {\n        fetch(url, {\n          method: 'POST',\n          // or 'PUT'\n          body: JSON.stringify(data),\n          // data can be `string` or {object}!\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (response) {\n          _this.props.addNote(response);\n\n          _this.props.history.push('/');\n        }).catch(function (error) {\n          return console.error('Error:', error);\n        });\n      }\n    };\n\n    _this.state = {\n      errors: \"\",\n      noteName: \"\",\n      noteContent: \"\"\n    };\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_this));\n    _this.handleNoteChange = _this.handleNoteChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"handleNameChange\",\n    value: function handleNameChange(event) {\n      this.setState({\n        noteName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleNoteChange\",\n    value: function handleNoteChange(event) {\n      this.setState({\n        noteContent: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ipsum = require('gen-ipsum'); // run \"npm install gen-ipsum\" to install React component\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(NotePageNav, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Enter note name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"newNote\",\n        value: this.state.noteName,\n        onChange: this.handleNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Enter note:\", React.createElement(\"textarea\", {\n        className: \"note__input\",\n        type: \"text\",\n        name: \"noteContent\",\n        placeholder: ipsum.generate({\n          words: 30\n        }),\n        value: this.state.noteContent,\n        onChange: this.handleNoteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))), React.createElement(Dropdown, {\n        folders: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.state.errors && React.createElement(\"span\", {\n        className: \"Error__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.errors)));\n    }\n  }]);\n\n  return AddNote;\n}(Component);\n\nAddNote.propTypes = {\n  addNote: PropTypes.func.isRequired\n};\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/gnmr/projects/noteful-client/src/AddNote/AddNote.js"],"names":["React","Component","NotePageNav","PropTypes","Dropdown","AddNote","props","handleSubmit","event","preventDefault","url","data","name","state","noteName","modified","Date","content","noteContent","folderId","setState","errors","fetch","method","body","JSON","stringify","headers","then","res","json","response","addNote","history","push","catch","error","console","handleNameChange","bind","handleNoteChange","target","value","ipsum","require","generate","words","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../Dropdown';\n\nexport default class AddNote extends Component {\n    \n    static propTypes = {\n        addNote: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: \"\",\n            noteName: ``,\n            noteContent: \"\"\n        };\n\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleNoteChange = this.handleNoteChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleNameChange(event) {\n        this.setState({ noteName: event.target.value });\n    }\n\n    handleNoteChange(event) {\n        this.setState({ noteContent: event.target.value });\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault();\n\n        const url = 'http://localhost:9090/notes';\n        const data = { name: this.state.noteName, modified: new Date(), content: this.state.noteContent, }\n        if(this.props.folderId ){\n            data.folderId = this.props.folderId\n        }\n        if (!data.name){\n            this.setState({ errors: \"Note name field cannot be blank\" })\n        }\n        else {\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                this.props.addNote(response)\n                this.props.history.push('/')\n            })\n            .catch(error => console.error('Error:', error));\n\n        \n        }\n    }\n    render() {\n        const ipsum = require('gen-ipsum'); // run \"npm install gen-ipsum\" to install React component\n        return (\n            <div>\n                <NotePageNav {...this.props} />\n                <form onSubmit = {this.handleSubmit}>\n                    <div>\n                    <label>Enter note name:\n                        <input type=\"text\" name=\"newNote\" value={this.state.noteName} onChange={this.handleNameChange} />\n                    </label>\n                    </div>\n                    <div>\n                    <label>Enter note:\n                        <textarea className=\"note__input\" type=\"text\" name=\"noteContent\" placeholder={ipsum.generate({words: 30})} value={this.state.noteContent} onChange={this.handleNoteChange} />\n                    </label>\n                    </div>\n                    <Dropdown folders={this.props}></Dropdown>\n                    <input type=\"submit\" value=\"Submit\" />\n                    {this.state.errors && <span className=\"Error__text\">{this.state.errors}</span>}\n                </form>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}