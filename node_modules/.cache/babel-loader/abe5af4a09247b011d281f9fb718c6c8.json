{"ast":null,"code":"import _classCallCheck from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gnmr/projects/noteful-client/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../Dropdown';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNote, _Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      var ipsum = require('gen-ipsum'); // run \"npm install gen-ipsum\" to install React component\n\n\n      var url = 'http://localhost:9090/notes';\n      var data = {\n        name: _this.state.value,\n        modified: new Date(),\n        content: ipsum.generate({\n          words: 30\n        })\n      };\n\n      if (_this.props.folderId) {\n        data.folderId = _this.props.folderId;\n      }\n\n      if (!data.name) {\n        _this.setState({\n          errors: \"field cannot be blank\"\n        });\n      } else {\n        fetch(url, {\n          method: 'POST',\n          // or 'PUT'\n          body: JSON.stringify(data),\n          // data can be `string` or {object}!\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (response) {\n          _this.props.addNote(response);\n\n          _this.props.history.push('/');\n        }).catch(function (error) {\n          return console.error('Error:', error);\n        });\n      }\n    };\n\n    _this.state = {\n      errors: \"\",\n      value: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(NotePageNav, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Enter Note Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"newNote\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), this.state.errors && React.createElement(\"span\", {\n        className: \"Error__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.errors)), React.createElement(Dropdown, {\n        folders: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddNote;\n}(Component);\n\nAddNote.propTypes = {\n  addNote: PropTypes.func.isRequired\n};\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/gnmr/projects/noteful-client/src/AddNote/AddNote.js"],"names":["React","Component","NotePageNav","PropTypes","Dropdown","AddNote","props","handleSubmit","event","preventDefault","ipsum","require","url","data","name","state","value","modified","Date","content","generate","words","folderId","setState","errors","fetch","method","body","JSON","stringify","headers","then","res","json","response","addNote","history","push","catch","error","console","handleChange","bind","target","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../Dropdown';\n\nexport default class AddNote extends Component {\n    \n    static propTypes = {\n        addNote: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: \"\",\n            value: ``\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault();\n\n        const ipsum = require('gen-ipsum'); // run \"npm install gen-ipsum\" to install React component\n        const url = 'http://localhost:9090/notes';\n        const data = { name: this.state.value, modified: new Date(), content: ipsum.generate({words: 30}), }\n        if(this.props.folderId ){\n            data.folderId = this.props.folderId\n        }\n        if (!data.name){\n            this.setState({ errors: \"field cannot be blank\" })\n        }\n        else {\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                this.props.addNote(response)\n                this.props.history.push('/')\n            })\n            .catch(error => console.error('Error:', error));\n\n        \n        }\n    }\n    render() {\n        return (\n            <div>\n                <NotePageNav {...this.props} />\n                <form onSubmit = {this.handleSubmit}>\n                    <label>Enter Note Name:\n                    <input type=\"text\" name=\"newNote\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                    {this.state.errors && <span className=\"Error__text\">{this.state.errors}</span>}\n                </form>\n                <Dropdown folders={this.props}></Dropdown>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}