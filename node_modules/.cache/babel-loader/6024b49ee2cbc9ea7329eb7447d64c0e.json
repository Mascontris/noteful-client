{"ast":null,"code":"import _classCallCheck from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/gnmr/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gnmr/projects/noteful-client/src/AddFolder/AddFolder.js\";\nimport React, { Component } from 'react';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport PropTypes from 'prop-types';\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFolder, _Component);\n\n  function AddFolder(props) {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFolder).call(this, props));\n    _this.state = {\n      errors: \"\",\n      value: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var url = 'http://localhost:9090/folders';\n      var data = {\n        name: this.state.value\n      };\n      console.log(data);\n\n      if (this.props.folderId) {\n        data.folderId = this.props.folderId;\n      }\n\n      if (!data.name) {\n        this.setState({\n          errors: \"field cannot be blank\"\n        });\n      } else {\n        fetch(url, {\n          method: 'POST',\n          // or 'PUT'\n          body: JSON.stringify(data),\n          // data can be `string` or {object}!\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (response) {\n          _this2.props.addFolder(response);\n\n          _this2.props.history.push('/');\n        }).catch(function (error) {\n          return console.error('Error:', error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(NotePageNav, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Folder Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"newFolder\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), this.state.errors && React.createElement(\"span\", {\n        className: \"Error__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.errors)));\n    }\n  }]);\n\n  return AddFolder;\n}(Component);\n\nAddFolder.propTypes = {\n  addFolder: PropTypes.func.isRequired\n};\nexport { AddFolder as default };","map":{"version":3,"sources":["/Users/gnmr/projects/noteful-client/src/AddFolder/AddFolder.js"],"names":["React","Component","NotePageNav","PropTypes","AddFolder","props","state","errors","value","handleChange","bind","handleSubmit","event","setState","target","preventDefault","url","data","name","console","log","folderId","fetch","method","body","JSON","stringify","headers","then","res","json","response","addFolder","history","push","catch","error","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport PropTypes from 'prop-types';\n\nexport default class AddFolder extends Component {\n\n    static propTypes = {\n        addFolder: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: \"\",\n            value: ``\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var url = 'http://localhost:9090/folders';\n        var data = { name: this.state.value }\n\n        console.log(data)\n\n        if(this.props.folderId ){\n            data.folderId = this.props.folderId\n        }\n        if (!data.name){\n            this.setState({ errors: \"field cannot be blank\" })\n        }\n        else {\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                this.props.addFolder(response)\n                this.props.history.push('/')\n            })\n            .catch(error => console.error('Error:', error));\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <NotePageNav {...this.props} />\n                <form onSubmit={this.handleSubmit}>\n                    <label>Folder Name:\n                    <input type=\"text\" name=\"newFolder\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n\n                    <input type=\"submit\" value=\"Submit\" />\n                    {this.state.errors && <span className=\"Error__text\">{this.state.errors}</span>}\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}